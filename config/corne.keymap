/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        accent_lower_a: accent_lower_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A>;
            label = "ACCENT_LOWER_A";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&caps_word                        &kp Q        &kp W           &kp E               &kp R               &kp T                  &kp Y                            &kp U              &kp I                &kp O            &kp P           &to 1
&mt LS(LA(LC(LEFT_COMMAND))) ESC  &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F    &mt LA(LS(LCTRL)) G    &mt RS(RA(RC(RIGHT_COMMAND))) H  &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RCTRL SEMI  &kp SQT
&kp LSHFT                         &kp Z        &kp X           &kp C               &kp V               &kp B                  &kp N                            &kp M              &kp COMMA            &kp DOT          &kp FSLH        &kp ESC
                                                               &kp LGUI            &mt LEFT_SHIFT TAB  &lt 4 ENTER            &lt 2 SPACE                      &lt 0 BACKSPACE    &kp DELETE
            >;
        };

        esp_lowercase {
            bindings = <
&trans  &trans           &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &accent_lower_a  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        NUM {
            bindings = <
&trans  &kp N7        &kp N8        &kp N9        &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SEMI          &kp EQUAL            &trans  &trans  &trans  &trans  &trans  &kp BACKSPACE
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp GRAVE         &kp BACKSLASH        &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &kp N0            &trans               &trans  &trans  &trans
            >;
        };

        SYM {
            bindings = <
&trans  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE        &kp RIGHT_BRACE          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp COLON             &kp PLUS                 &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp TILDE             &kp PIPE                 &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans
            >;
        };

        NAV {
            bindings = <
&trans  &kp END     &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))    &kp HOME        &kp PG_DN  &kp PG_UP     &kp END    &kp INS  &trans
&trans  &trans      &trans                &trans                 &trans                    &trans                       &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &kp K_UNDO  &kp K_CUT             &kp K_COPY             &kp K_PASTE               &kp K_REDO                   &trans          &trans     &trans        &trans     &trans   &trans
                                          &trans                 &trans                    &trans                       &trans          &trans     &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };
    };
};
